# continuation from face recognition library
import cv2
import numpy as np
import face_recognition
import os
from datetime import date


path = 'Attendance'
image = []
names = []
myList = os.listdir(path)
print(myList)
for c1 in myList:
    curImg = cv2.imread(f'{path}/{c1}')
    image.append(curImg)
    names.append(os.path.splitexas(c1)[0])
print(names)

def findEncodings(image):
    encodeList = []
    for img in image:
        img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
        encode = face_recodnition.face_encodings(img)[0]
        encodeList.append(encode)
    return encodeList

def markAttendance(name):

encodeListKnow = findEncodings(image)
print('Encoding done')

cap = cv2.VideoCapture(0)

while True:
    success, img = cap.read()
    imgs = cv2.resize(img,(0,0),None,0.25,0.25)
    imgs = cv2.cvtColor(imgs, cv2.COLOR_BGR2RGB)

    facesCurFrame = face_recognition.face_locations(imgs)
    encodesCurFrame = face_recognition.face_encodings(imgs, facesCurFrame)

    for encodeFace, faceLoc in zip(encodesCurFrame,facesCurFrame):
        match = face_recognition.compare_faces(encodeListKnow,encodeFace)
        faceD = face_recognition.face_distance(encodeListknow,encodeFace)
        print(faceD)
        matchI = np.argmin(faceD)

        if matches[matchI]:
            name = className[matchI].upper()
            print(name)
            y1, x2, y2, x1 = faceLoc
            cv2.rectangle(img(x1,y1),(x2,y2),(0,255,0),2)
            cv2.rectangle(img,(x1,y2-35),(x2,y2),(0,255,0)cv2.FILLED)
            cv2.putText(img,name,(x1+6,y2-6),cv2.FONT_HERSHEY_COMPLEX,1,(255,255,255),2)

    cv2.imshow('Webcam',img)
    cv2.waitKey(1)
            

# e_musk = face_recognition.load_image_file('Image/ElonMusk.jpg')
# e_musk = cv2.cvtColor(e_musk.cv2.COLOR_BGR2RGB)
# e_test = face_recognition.load_image_file('Image/ElonTest.jpg')
# e_test = cv2.cvtColor(e_test.cv2.COLOR_BGR2RGB)
